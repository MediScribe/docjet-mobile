// Mocks generated by Mockito 5.4.5 from annotations
// in docjet_mobile/test/core/auth/infrastructure/dio_factory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:docjet_mobile/core/auth/auth_credentials_provider.dart' as _i3;
import 'package:docjet_mobile/core/auth/events/auth_event_bus.dart' as _i7;
import 'package:docjet_mobile/core/auth/events/auth_events.dart' as _i8;
import 'package:docjet_mobile/core/auth/infrastructure/auth_api_client.dart'
    as _i5;
import 'package:docjet_mobile/core/auth/infrastructure/dtos/auth_response_dto.dart'
    as _i4;
import 'package:docjet_mobile/core/interfaces/app_config_interface.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthCredentialsProvider_1 extends _i1.SmartFake
    implements _i3.AuthCredentialsProvider {
  _FakeAuthCredentialsProvider_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponseDto_2 extends _i1.SmartFake
    implements _i4.AuthResponseDto {
  _FakeAuthResponseDto_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiClient extends _i1.Mock implements _i5.AuthApiClient {
  MockAuthApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.Dio);

  @override
  _i3.AuthCredentialsProvider get credentialsProvider => (super.noSuchMethod(
        Invocation.getter(#credentialsProvider),
        returnValue: _FakeAuthCredentialsProvider_1(
          this,
          Invocation.getter(#credentialsProvider),
        ),
      ) as _i3.AuthCredentialsProvider);

  @override
  _i6.Future<_i4.AuthResponseDto> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i6.Future<_i4.AuthResponseDto>.value(_FakeAuthResponseDto_2(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i4.AuthResponseDto>);

  @override
  _i6.Future<_i4.AuthResponseDto> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
        ),
        returnValue:
            _i6.Future<_i4.AuthResponseDto>.value(_FakeAuthResponseDto_2(
          this,
          Invocation.method(
            #refreshToken,
            [refreshToken],
          ),
        )),
      ) as _i6.Future<_i4.AuthResponseDto>);

  @override
  _i6.Future<void> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void testHandleDioException(_i2.DioException? e) => super.noSuchMethod(
        Invocation.method(
          #testHandleDioException,
          [e],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthCredentialsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthCredentialsProvider extends _i1.Mock
    implements _i3.AuthCredentialsProvider {
  MockAuthCredentialsProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String?> getApiKey() => (super.noSuchMethod(
        Invocation.method(
          #getApiKey,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setAccessToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setAccessToken,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> deleteAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccessToken,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setRefreshToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setRefreshToken,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> deleteRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteRefreshToken,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<bool> isAccessTokenValid() => (super.noSuchMethod(
        Invocation.method(
          #isAccessTokenValid,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> isRefreshTokenValid() => (super.noSuchMethod(
        Invocation.method(
          #isRefreshTokenValid,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [AuthEventBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthEventBus extends _i1.Mock implements _i7.AuthEventBus {
  MockAuthEventBus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i8.AuthEvent> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i8.AuthEvent>.empty(),
      ) as _i6.Stream<_i8.AuthEvent>);

  @override
  void add(_i8.AuthEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppConfigInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppConfigInterface extends _i1.Mock
    implements _i9.AppConfigInterface {
  MockAppConfigInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiDomain => (super.noSuchMethod(
        Invocation.getter(#apiDomain),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#apiDomain),
        ),
      ) as String);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  bool get isDevelopment => (super.noSuchMethod(
        Invocation.getter(#isDevelopment),
        returnValue: false,
      ) as bool);
}
